{"ast":null,"code":"var _jsxFileName = \"/Users/akshitanand/Deal_Dazzle_/client/src/components/razorpay-btn/razorpay.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RazorpayButton = ({\n  amount\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleBuyNow = async () => {\n    const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n    if (!res) {\n      alert(\"Razorpay SDK failed to load. Are you online?\");\n      return;\n    }\n    const orderData = await createOrder(amount);\n    const options = {\n      key: \"rzp_test_4E5ZrpYhNWR2ti\",\n      amount: orderData.amount,\n      // Amount is expected to be in paisa\n      currency: \"INR\",\n      name: \"Deal Dazzle\",\n      description: \"Product Purchase\",\n      image: \"/your-company-logo.png\",\n      order_id: orderData.id,\n      handler: function (response) {\n        dispatch({\n          type: \"PURCHASE_SUCCESS\",\n          payload: response\n        });\n        // Redirect to the Order Summary page with the Razorpay Payment ID\n        history.push(`/order-summary/${response.razorpay_payment_id}`);\n      },\n      prefill: {\n        name: \"Customer Name\",\n        email: \"customer@example.com\",\n        contact: \"9876543210\"\n      },\n      notes: {\n        address: \"Customer Address\"\n      },\n      theme: {\n        color: \"#3399cc\"\n      }\n    };\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleBuyNow,\n    children: \"Buy Now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(RazorpayButton, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", true);\n_c = RazorpayButton;\nexport default RazorpayButton;\nvar _c;\n$RefreshReg$(_c, \"RazorpayButton\");","map":{"version":3,"names":["RazorpayButton","amount","_s","dispatch","useDispatch","history","useHistory","handleBuyNow","res","loadScript","alert","orderData","createOrder","options","key","currency","name","description","image","order_id","id","handler","response","type","payload","push","razorpay_payment_id","prefill","email","contact","notes","address","theme","color","razorpay","window","Razorpay","open","_jsxDEV","Button","variant","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshitanand/Deal_Dazzle_/client/src/components/razorpay-btn/razorpay.js"],"sourcesContent":["const RazorpayButton = ({ amount }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleBuyNow = async () => {\n    const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n    if (!res) {\n      alert(\"Razorpay SDK failed to load. Are you online?\");\n      return;\n    }\n\n    const orderData = await createOrder(amount);\n    \n    const options = {\n      key: \"rzp_test_4E5ZrpYhNWR2ti\",\n      amount: orderData.amount, // Amount is expected to be in paisa\n      currency: \"INR\",\n      name: \"Deal Dazzle\",\n      description: \"Product Purchase\",\n      image: \"/your-company-logo.png\",\n      order_id: orderData.id,\n      handler: function (response) {\n        dispatch({ type: \"PURCHASE_SUCCESS\", payload: response });\n        // Redirect to the Order Summary page with the Razorpay Payment ID\n        history.push(`/order-summary/${response.razorpay_payment_id}`);\n      },\n      prefill: {\n        name: \"Customer Name\",\n        email: \"customer@example.com\",\n        contact: \"9876543210\",\n      },\n      notes: {\n        address: \"Customer Address\",\n      },\n      theme: {\n        color: \"#3399cc\",\n      },\n    };\n\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleBuyNow}>\n      Buy Now\n    </Button>\n  );\n};\n\nexport default RazorpayButton;\n"],"mappings":";;;AAAA,MAAMA,cAAc,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAMC,OAAO,GAAGC,UAAU,CAAC,CAAC;EAE5B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,GAAG,GAAG,MAAMC,UAAU,CAAC,8CAA8C,CAAC;IAC5E,IAAI,CAACD,GAAG,EAAE;MACRE,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACF;IAEA,MAAMC,SAAS,GAAG,MAAMC,WAAW,CAACX,MAAM,CAAC;IAE3C,MAAMY,OAAO,GAAG;MACdC,GAAG,EAAE,yBAAyB;MAC9Bb,MAAM,EAAEU,SAAS,CAACV,MAAM;MAAE;MAC1Bc,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE,kBAAkB;MAC/BC,KAAK,EAAE,wBAAwB;MAC/BC,QAAQ,EAAER,SAAS,CAACS,EAAE;MACtBC,OAAO,EAAE,SAAAA,CAAUC,QAAQ,EAAE;QAC3BnB,QAAQ,CAAC;UAAEoB,IAAI,EAAE,kBAAkB;UAAEC,OAAO,EAAEF;QAAS,CAAC,CAAC;QACzD;QACAjB,OAAO,CAACoB,IAAI,CAAE,kBAAiBH,QAAQ,CAACI,mBAAoB,EAAC,CAAC;MAChE,CAAC;MACDC,OAAO,EAAE;QACPX,IAAI,EAAE,eAAe;QACrBY,KAAK,EAAE,sBAAsB;QAC7BC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLC,KAAK,EAAE;MACT;IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAACvB,OAAO,CAAC;IAC7CqB,QAAQ,CAACG,IAAI,CAAC,CAAC;EACjB,CAAC;EAED,oBACEC,OAAA,CAACC,MAAM;IAACC,OAAO,EAAC,WAAW;IAACP,KAAK,EAAC,SAAS;IAACQ,OAAO,EAAElC,YAAa;IAAAmC,QAAA,EAAC;EAEnE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAAC5C,EAAA,CAhDIF,cAAc;AAAA+C,EAAA,GAAd/C,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}