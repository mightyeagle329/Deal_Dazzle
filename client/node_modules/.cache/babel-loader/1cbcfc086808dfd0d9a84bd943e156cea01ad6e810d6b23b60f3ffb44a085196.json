{"ast":null,"code":"var _jsxFileName = \"/Users/akshitanand/Deal_Dazzle_/client/src/components/Seller/SellerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Grid } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPostsBySeller } from '../../actions/posts'; // Update with your action creator\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SellerDashboard = () => {\n  _s();\n  var _user$result;\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (user) {\n      dispatch(getPostsBySeller(user.result._id)).then(data => {\n        setPosts(data); // Assuming your action returns posts ordered by the seller\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [dispatch, user]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Seller Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SellerDashboard, \"hTsfIVOoE1qk/BePl0wIM+U3NUo=\", false, function () {\n  return [useDispatch];\n});\n_c = SellerDashboard;\nexport default SellerDashboard;\nvar _c;\n$RefreshReg$(_c, \"SellerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Grid","useDispatch","useSelector","getPostsBySeller","jsxDEV","_jsxDEV","SellerDashboard","_s","_user$result","dispatch","user","JSON","parse","localStorage","getItem","posts","setPosts","result","_id","then","data","catch","error","console","log","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","name","container","spacing","map","post","item","xs","sm","md","_c","$RefreshReg$"],"sources":["/Users/akshitanand/Deal_Dazzle_/client/src/components/Seller/SellerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Grid } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPostsBySeller } from '../../actions/posts'; // Update with your action creator\n\nconst SellerDashboard = () => {\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    if (user) {\n      dispatch(getPostsBySeller(user.result._id))\n        .then((data) => {\n          setPosts(data); // Assuming your action returns posts ordered by the seller\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [dispatch, user]);\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Seller Dashboard\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom>\n        Welcome, {user?.result?.name}!\n      </Typography>\n      <Grid container spacing={3}>\n        {/* Display posts */}\n        {posts.map((post) => (\n          <Grid item key={post._id} xs={12} sm={6} md={4}>\n            {/* Display each post */}\n          </Grid>\n        ))}\n      </Grid>\n      {/* Include analytics components or sections as needed */}\n    </Container>\n  );\n};\n\nexport default SellerDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,QAAQ,mBAAmB;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,YAAA;EAC5B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;EACxD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIa,IAAI,EAAE;MACRD,QAAQ,CAACN,gBAAgB,CAACO,IAAI,CAACO,MAAM,CAACC,GAAG,CAAC,CAAC,CACxCC,IAAI,CAAEC,IAAI,IAAK;QACdJ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACb,QAAQ,EAAEC,IAAI,CAAC,CAAC;EAEpB,oBACEL,OAAA,CAACP,SAAS;IAAA2B,QAAA,gBACRpB,OAAA,CAACN,UAAU;MAAC2B,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb1B,OAAA,CAACN,UAAU;MAAC2B,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,GAAC,WAC3B,EAACf,IAAI,aAAJA,IAAI,wBAAAF,YAAA,GAAJE,IAAI,CAAEO,MAAM,cAAAT,YAAA,uBAAZA,YAAA,CAAcwB,IAAI,EAAC,GAC/B;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb1B,OAAA,CAACL,IAAI;MAACiC,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,EAExBV,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACd/B,OAAA,CAACL,IAAI;QAACqC,IAAI;QAAgBC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE;MAAE,GAA/BJ,IAAI,CAAClB,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEhB,CAAC;AAACxB,EAAA,CApCID,eAAe;EAAA,QACFL,WAAW;AAAA;AAAAwC,EAAA,GADxBnC,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}