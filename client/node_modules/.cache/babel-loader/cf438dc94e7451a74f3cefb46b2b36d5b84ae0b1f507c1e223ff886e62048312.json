{"ast":null,"code":"var _jsxFileName = \"/Users/akshitanand/Deal_Dazzle_/client/src/components/razorpay-btn/razorpay.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RazorpayButton = ({\n  amount,\n  isSeller,\n  userEmail,\n  productName\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleBuyNow = async () => {\n    try {\n      // Make a POST request to the backend endpoint to send purchase confirmation emails\n      await axios.post('http://localhost:3001/purchase-confirmation', {\n        userEmail: userEmail,\n        // User's email\n        adminEmail: 'admin@example.com',\n        // Admin's email (replace with your admin's email)\n        productName: productName,\n        // Name of the purchased product\n        paymentId: 'your-payment-id' // Payment ID (you can generate this on the backend)\n      });\n\n      // Handle the rest of the purchase process (e.g., redirecting to order summary)\n      dispatch({\n        type: 'PURCHASE_SUCCESS'\n      });\n      history.push(`/order-summary/${paymentId}`);\n    } catch (error) {\n      console.error('Error sending purchase confirmation:', error);\n      alert('Failed to complete purchase. Please try again.');\n    }\n  };\n\n  // Render the button only if the user is not a seller\n  return !isSeller ? /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleBuyNow,\n    children: \"Buy Now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(RazorpayButton, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n_c = RazorpayButton;\nexport default RazorpayButton;\nvar _c;\n$RefreshReg$(_c, \"RazorpayButton\");","map":{"version":3,"names":["React","Button","useDispatch","useHistory","axios","jsxDEV","_jsxDEV","RazorpayButton","amount","isSeller","userEmail","productName","_s","dispatch","history","handleBuyNow","post","adminEmail","paymentId","type","push","error","console","alert","variant","color","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshitanand/Deal_Dazzle_/client/src/components/razorpay-btn/razorpay.js"],"sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RazorpayButton = ({ amount, isSeller, userEmail, productName }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleBuyNow = async () => {\n    try {\n      // Make a POST request to the backend endpoint to send purchase confirmation emails\n      await axios.post('http://localhost:3001/purchase-confirmation', {\n        userEmail: userEmail, // User's email\n        adminEmail: 'admin@example.com', // Admin's email (replace with your admin's email)\n        productName: productName, // Name of the purchased product\n        paymentId: 'your-payment-id', // Payment ID (you can generate this on the backend)\n      });\n\n      // Handle the rest of the purchase process (e.g., redirecting to order summary)\n      dispatch({ type: 'PURCHASE_SUCCESS' });\n      history.push(`/order-summary/${paymentId}`);\n    } catch (error) {\n      console.error('Error sending purchase confirmation:', error);\n      alert('Failed to complete purchase. Please try again.');\n    }\n  };\n\n  // Render the button only if the user is not a seller\n  return !isSeller ? (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleBuyNow}>\n      Buy Now\n    </Button>\n  ) : null;\n};\n\nexport default RazorpayButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,OAAO,GAAGX,UAAU,CAAC,CAAC;EAE5B,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMX,KAAK,CAACY,IAAI,CAAC,6CAA6C,EAAE;QAC9DN,SAAS,EAAEA,SAAS;QAAE;QACtBO,UAAU,EAAE,mBAAmB;QAAE;QACjCN,WAAW,EAAEA,WAAW;QAAE;QAC1BO,SAAS,EAAE,iBAAiB,CAAE;MAChC,CAAC,CAAC;;MAEF;MACAL,QAAQ,CAAC;QAAEM,IAAI,EAAE;MAAmB,CAAC,CAAC;MACtCL,OAAO,CAACM,IAAI,CAAE,kBAAiBF,SAAU,EAAC,CAAC;IAC7C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DE,KAAK,CAAC,gDAAgD,CAAC;IACzD;EACF,CAAC;;EAED;EACA,OAAO,CAACd,QAAQ,gBACdH,OAAA,CAACL,MAAM;IAACuB,OAAO,EAAC,WAAW;IAACC,KAAK,EAAC,SAAS;IAACC,OAAO,EAAEX,YAAa;IAAAY,QAAA,EAAC;EAEnE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,GACP,IAAI;AACV,CAAC;AAACnB,EAAA,CA7BIL,cAAc;EAAA,QACDL,WAAW,EACZC,UAAU;AAAA;AAAA6B,EAAA,GAFtBzB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}