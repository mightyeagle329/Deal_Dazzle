{"ast":null,"code":"var _jsxFileName = \"/Users/akshitanand/Deal_Dazzle_/client/src/context/notifications.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/notificationContext.js\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const useNotifications = () => {\n  _s();\n  return useContext(NotificationContext);\n};\n_s(useNotifications, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const addNotification = notification => {\n    setNotifications(prevNotifications => [...prevNotifications, notification]);\n  };\n  const clearNotifications = () => {\n    setNotifications([]);\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notifications,\n      addNotification,\n      clearNotifications\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s2(NotificationProvider, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","NotificationContext","useNotifications","_s","NotificationProvider","children","_s2","notifications","setNotifications","addNotification","notification","prevNotifications","clearNotifications","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshitanand/Deal_Dazzle_/client/src/context/notifications.js"],"sourcesContent":["// src/contexts/notificationContext.js\n\nimport React, { createContext, useContext, useState } from 'react';\n\nconst NotificationContext = createContext();\n\nexport const useNotifications = () => useContext(NotificationContext);\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const addNotification = (notification) => {\n    setNotifications(prevNotifications => [...prevNotifications, notification]);\n  };\n\n  const clearNotifications = () => {\n    setNotifications([]);\n  };\n\n  return (\n    <NotificationContext.Provider value={{ notifications, addNotification, clearNotifications }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,mBAAmB,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,gBAAgB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,mBAAmB,CAAC;AAAA;AAACE,EAAA,CAAzDD,gBAAgB;AAE7B,OAAO,MAAME,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACpD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,eAAe,GAAIC,YAAY,IAAK;IACxCF,gBAAgB,CAACG,iBAAiB,IAAI,CAAC,GAAGA,iBAAiB,EAAED,YAAY,CAAC,CAAC;EAC7E,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/BJ,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,oBACER,OAAA,CAACC,mBAAmB,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEP,aAAa;MAAEE,eAAe;MAAEG;IAAmB,CAAE;IAAAP,QAAA,EACzFA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;AAACZ,GAAA,CAhBWF,oBAAoB;AAAAe,EAAA,GAApBf,oBAAoB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}