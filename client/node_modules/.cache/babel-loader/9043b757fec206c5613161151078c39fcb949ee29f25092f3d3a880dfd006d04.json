{"ast":null,"code":"var _jsxFileName = \"/Users/akshitanand/Deal_Dazzle_/client/src/components/adminpurchase/notification.js\",\n  _s = $RefreshSig$();\n// src/components/adminpurchase/AdminPurchases.js\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchPurchasesByAdmin } from '../../api'; // Adjust this path as needed based on your project structure\nimport { useAuth } from '../../context/AuthContext'; // Ensure this path matches the location of your AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPurchases = () => {\n  _s();\n  const [purchases, setPurchases] = useState([]);\n  const {\n    authData\n  } = useAuth(); // Use the useAuth hook to access the authentication data\n  const adminId = authData === null || authData === void 0 ? void 0 : authData.adminId; // Ensure adminId is correctly defined in your authData structure\n\n  useEffect(() => {\n    const getPurchases = async () => {\n      if (adminId) {\n        // Only fetch if adminId is available\n        try {\n          const {\n            data\n          } = await fetchPurchasesByAdmin(adminId);\n          setPurchases(data); // Set the fetched purchases to state\n        } catch (error) {\n          console.error('Error fetching purchases:', error);\n        }\n      }\n    };\n    getPurchases();\n  }, [adminId]); // Depend on adminId to re-run this effect when it changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: purchases.length > 0 ? purchases.map((purchase, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product ID: \", purchase.productId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Buyer ID: \", purchase.buyerId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No purchases found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPurchases, \"zCDNeQUcjUDld3L/N5renDRkyCY=\", false, function () {\n  return [useAuth];\n});\n_c = AdminPurchases;\nexport default AdminPurchases;\nvar _c;\n$RefreshReg$(_c, \"AdminPurchases\");","map":{"version":3,"names":["React","useEffect","useState","fetchPurchasesByAdmin","useAuth","jsxDEV","_jsxDEV","AdminPurchases","_s","purchases","setPurchases","authData","adminId","getPurchases","data","error","console","children","length","map","purchase","index","productId","fileName","_jsxFileName","lineNumber","columnNumber","buyerId","_c","$RefreshReg$"],"sources":["/Users/akshitanand/Deal_Dazzle_/client/src/components/adminpurchase/notification.js"],"sourcesContent":["// src/components/adminpurchase/AdminPurchases.js\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchPurchasesByAdmin } from '../../api'; // Adjust this path as needed based on your project structure\nimport { useAuth } from '../../context/AuthContext'; // Ensure this path matches the location of your AuthContext\n\nconst AdminPurchases = () => {\n    const [purchases, setPurchases] = useState([]);\n    const { authData } = useAuth();  // Use the useAuth hook to access the authentication data\n    const adminId = authData?.adminId; // Ensure adminId is correctly defined in your authData structure\n\n    useEffect(() => {\n        const getPurchases = async () => {\n            if (adminId) {  // Only fetch if adminId is available\n                try {\n                    const { data } = await fetchPurchasesByAdmin(adminId);\n                    setPurchases(data); // Set the fetched purchases to state\n                } catch (error) {\n                    console.error('Error fetching purchases:', error);\n                }\n            }\n        };\n\n        getPurchases();\n    }, [adminId]);  // Depend on adminId to re-run this effect when it changes\n\n    return (\n        <div>\n            {purchases.length > 0 ? (\n                purchases.map((purchase, index) => (\n                    <div key={index}>\n                        <p>Product ID: {purchase.productId}</p>\n                        <p>Buyer ID: {purchase.buyerId}</p>\n                    </div>\n                ))\n            ) : (\n                <p>No purchases found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default AdminPurchases;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,qBAAqB,QAAQ,WAAW,CAAC,CAAC;AACnD,SAASC,OAAO,QAAQ,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAES;EAAS,CAAC,GAAGP,OAAO,CAAC,CAAC,CAAC,CAAE;EACjC,MAAMQ,OAAO,GAAGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,OAAO,CAAC,CAAC;;EAEnCX,SAAS,CAAC,MAAM;IACZ,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAID,OAAO,EAAE;QAAG;QACZ,IAAI;UACA,MAAM;YAAEE;UAAK,CAAC,GAAG,MAAMX,qBAAqB,CAACS,OAAO,CAAC;UACrDF,YAAY,CAACI,IAAI,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACrD;MACJ;IACJ,CAAC;IAEDF,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC,CAAC,CAAE;;EAEhB,oBACIN,OAAA;IAAAW,QAAA,EACKR,SAAS,CAACS,MAAM,GAAG,CAAC,GACjBT,SAAS,CAACU,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC1Bf,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAAW,QAAA,GAAG,cAAY,EAACG,QAAQ,CAACE,SAAS;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCpB,OAAA;QAAAW,QAAA,GAAG,YAAU,EAACG,QAAQ,CAACO,OAAO;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAF7BL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACR,CAAC,gBAEFpB,OAAA;MAAAW,QAAA,EAAG;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC5B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClB,EAAA,CAlCID,cAAc;EAAA,QAEKH,OAAO;AAAA;AAAAwB,EAAA,GAF1BrB,cAAc;AAoCpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}