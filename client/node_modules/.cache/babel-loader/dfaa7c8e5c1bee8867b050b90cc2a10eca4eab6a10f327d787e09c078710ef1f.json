{"ast":null,"code":"var _jsxFileName = \"/Users/akshitanand/Deal_Dazzle_/client/src/components/razorpay-btn/razorpay.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadScript = src => {\n  return new Promise(resolve => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n};\nconst createOrder = async amount => {\n  try {\n    const result = await axios.post(\"http://localhost:3001/payment/create-order\", {\n      amount\n    });\n    return result.data;\n  } catch (error) {\n    console.error(\"There was an error creating the order: \", error);\n    alert(\"Failed to create order. Check console for more details.\");\n    throw error;\n  }\n};\nconst RazorpayButton = ({\n  amount,\n  isSeller\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleBuyNow = async () => {\n    // Your existing logic for handling the purchase\n  };\n\n  // Render the button only if the user is not a seller\n  return !isSeller ? /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleBuyNow,\n    children: \"Buy Now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(RazorpayButton, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n_c = RazorpayButton;\nexport default RazorpayButton;\nvar _c;\n$RefreshReg$(_c, \"RazorpayButton\");","map":{"version":3,"names":["React","Button","useDispatch","useHistory","axios","jsxDEV","_jsxDEV","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","createOrder","amount","result","post","data","error","console","alert","RazorpayButton","isSeller","_s","dispatch","history","handleBuyNow","variant","color","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshitanand/Deal_Dazzle_/client/src/components/razorpay-btn/razorpay.js"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst loadScript = (src) => {\n  return new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n};\n\nconst createOrder = async (amount) => {\n  try {\n    const result = await axios.post(\n      \"http://localhost:3001/payment/create-order\",\n      { amount }\n    );\n    return result.data;\n  } catch (error) {\n    console.error(\"There was an error creating the order: \", error);\n    alert(\"Failed to create order. Check console for more details.\");\n    throw error;\n  }\n};\n\nconst RazorpayButton = ({ amount, isSeller }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleBuyNow = async () => {\n    // Your existing logic for handling the purchase\n  };\n\n  // Render the button only if the user is not a seller\n  return !isSeller ? (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleBuyNow}>\n      Buy Now\n    </Button>\n  ) : null;\n};\n\nexport default RazorpayButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAIC,GAAG,IAAK;EAC1B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACH,GAAG,GAAGA,GAAG;IAChBG,MAAM,CAACG,MAAM,GAAG,MAAM;MACpBJ,OAAO,CAAC,IAAI,CAAC;IACf,CAAC;IACDC,MAAM,CAACI,OAAO,GAAG,MAAM;MACrBL,OAAO,CAAC,KAAK,CAAC;IAChB,CAAC;IACDE,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC;AAED,MAAMO,WAAW,GAAG,MAAOC,MAAM,IAAK;EACpC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC7B,4CAA4C,EAC5C;MAAEF;IAAO,CACX,CAAC;IACD,OAAOC,MAAM,CAACE,IAAI;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/DE,KAAK,CAAC,yDAAyD,CAAC;IAChE,MAAMF,KAAK;EACb;AACF,CAAC;AAED,MAAMG,cAAc,GAAGA,CAAC;EAAEP,MAAM;EAAEQ;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAC9B,MAAM4B,OAAO,GAAG3B,UAAU,CAAC,CAAC;EAE5B,MAAM4B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;EAAA,CACD;;EAED;EACA,OAAO,CAACJ,QAAQ,gBACdrB,OAAA,CAACL,MAAM;IAAC+B,OAAO,EAAC,WAAW;IAACC,KAAK,EAAC,SAAS;IAACC,OAAO,EAAEH,YAAa;IAAAI,QAAA,EAAC;EAEnE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,GACP,IAAI;AACV,CAAC;AAACX,EAAA,CAdIF,cAAc;EAAA,QACDxB,WAAW,EACZC,UAAU;AAAA;AAAAqC,EAAA,GAFtBd,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}