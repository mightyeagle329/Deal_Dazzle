{"ast":null,"code":"var _jsxFileName = \"/Users/akshitanand/Deal_Dazzle_/client/src/components/razorpay-btn/razorpay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\n\n// Utility function to load external scripts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadScript = src => {\n  return new Promise(resolve => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n};\n\n// Function to create an order by making an API call\nconst createOrder = async amount => {\n  try {\n    const result = await axios.post('http://localhost:3001/payment/create-order', {\n      amount\n    });\n    return result.data;\n  } catch (error) {\n    console.error(\"There was an error creating the order: \", error);\n    throw error;\n  }\n};\nconst RazorpayButton = ({\n  amount\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  // useSelector to access the isAuthenticated state from Redux\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n\n  // Handler for the Buy Now button click\n  const handleBuyNow = async () => {\n    if (!isAuthenticated) {\n      // Redirect to sign-in page if not authenticated\n      history.push(\"/auth\");\n      return;\n    }\n\n    // Load the Razorpay script\n    const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n    if (!res) {\n      alert(\"Razorpay SDK failed to load. Are you online?\");\n      return;\n    }\n\n    // Create an order and get order data\n    const orderData = await createOrder(amount);\n\n    // Define options for Razorpay\n    const options = {\n      key: \"rzp_test_4E5ZrpYhNWR2ti\",\n      // Use the correct API key\n      amount: orderData.amount,\n      // Amount should be in smallest currency unit\n      currency: \"INR\",\n      name: \"Deal Dazzle\",\n      description: \"Product Purchase\",\n      image: \"/your-company-logo.png\",\n      order_id: orderData.id,\n      // Generated by backend\n      handler: function (response) {\n        dispatch({\n          type: \"PURCHASE_SUCCESS\",\n          payload: response\n        });\n        history.push(`/order-summary/${response.razorpay_payment_id}`);\n      },\n      prefill: {\n        name: \"Customer Name\",\n        email: \"customer@example.com\",\n        contact: \"9876543210\"\n      },\n      notes: {\n        address: \"Customer Address\"\n      },\n      theme: {\n        color: \"#3399cc\"\n      }\n    };\n\n    // Instantiate Razorpay and open the payment gateway\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n\n  // Return the Buy Now button\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleBuyNow,\n    children: \"Buy Now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(RazorpayButton, \"4yRz9gT7kd0yodsDTvo3rPWbedY=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n_c = RazorpayButton;\nexport default RazorpayButton;\nvar _c;\n$RefreshReg$(_c, \"RazorpayButton\");","map":{"version":3,"names":["React","useEffect","Button","useDispatch","useSelector","useHistory","axios","jsxDEV","_jsxDEV","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","createOrder","amount","result","post","data","error","console","RazorpayButton","_s","dispatch","history","isAuthenticated","state","auth","handleBuyNow","push","res","alert","orderData","options","key","currency","name","description","image","order_id","id","handler","response","type","payload","razorpay_payment_id","prefill","email","contact","notes","address","theme","color","razorpay","window","Razorpay","open","variant","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshitanand/Deal_Dazzle_/client/src/components/razorpay-btn/razorpay.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\n\n// Utility function to load external scripts\nconst loadScript = (src) => {\n    return new Promise((resolve) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n        script.onload = () => {\n            resolve(true);\n        };\n        script.onerror = () => {\n            resolve(false);\n        };\n        document.body.appendChild(script);\n    });\n};\n\n// Function to create an order by making an API call\nconst createOrder = async (amount) => {\n    try {\n        const result = await axios.post('http://localhost:3001/payment/create-order', { amount });\n        return result.data;\n    } catch (error) {\n        console.error(\"There was an error creating the order: \", error);\n        throw error;\n    }\n};\n\nconst RazorpayButton = ({ amount }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // useSelector to access the isAuthenticated state from Redux\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n\n    // Handler for the Buy Now button click\n    const handleBuyNow = async () => {\n        if (!isAuthenticated) {\n            // Redirect to sign-in page if not authenticated\n            history.push(\"/auth\");\n            return;\n        }\n\n        // Load the Razorpay script\n        const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n        if (!res) {\n            alert(\"Razorpay SDK failed to load. Are you online?\");\n            return;\n        }\n\n        // Create an order and get order data\n        const orderData = await createOrder(amount);\n        \n        // Define options for Razorpay\n        const options = {\n            key: \"rzp_test_4E5ZrpYhNWR2ti\", // Use the correct API key\n            amount: orderData.amount, // Amount should be in smallest currency unit\n            currency: \"INR\",\n            name: \"Deal Dazzle\",\n            description: \"Product Purchase\",\n            image: \"/your-company-logo.png\",\n            order_id: orderData.id, // Generated by backend\n            handler: function (response) {\n                dispatch({ type: \"PURCHASE_SUCCESS\", payload: response });\n                history.push(`/order-summary/${response.razorpay_payment_id}`);\n            },\n            prefill: {\n                name: \"Customer Name\",\n                email: \"customer@example.com\",\n                contact: \"9876543210\",\n            },\n            notes: {\n                address: \"Customer Address\",\n            },\n            theme: {\n                color: \"#3399cc\",\n            },\n        };\n\n        // Instantiate Razorpay and open the payment gateway\n        const razorpay = new window.Razorpay(options);\n        razorpay.open();\n    };\n\n    // Return the Buy Now button\n    return (\n        <Button variant=\"contained\" color=\"primary\" onClick={handleBuyNow}>\n            Buy Now\n        </Button>\n    );\n};\n\nexport default RazorpayButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}