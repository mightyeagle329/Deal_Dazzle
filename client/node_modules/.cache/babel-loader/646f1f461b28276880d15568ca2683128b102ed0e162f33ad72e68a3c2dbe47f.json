{"ast":null,"code":"// actions/posts.js\nimport { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsByCreator = name => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsByCreator(name);\n    dispatch({\n      type: FETCH_BY_CREATOR,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySeller = sellerId => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySeller(sellerId);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data\n      }\n    }); // You may want to create a separate action type for fetching posts by seller\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    history.push(`/posts/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  try {\n    const {\n      data\n    } = await api.likePost(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const signin = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signIn(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    router.push('/');\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2, _error$response2$data;\n    console.log(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n    swal({\n      title: \"Error\",\n      text: error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message,\n      icon: \"error\"\n    });\n  }\n};\nexport const signup = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signUp(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    router.push('/');\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.log(error);\n    swal({\n      title: \"Error\",\n      text: error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message,\n      icon: \"error\"\n    });\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","COMMENT","FETCH_BY_CREATOR","api","getPost","id","dispatch","type","data","fetchPost","payload","post","error","console","log","getPosts","page","currentPage","numberOfPages","fetchPosts","getPostsByCreator","name","fetchPostsByCreator","getPostsBySearch","searchQuery","fetchPostsBySearch","getPostsBySeller","sellerId","fetchPostsBySeller","createPost","history","push","_id","updatePost","likePost","user","JSON","parse","localStorage","getItem","token","commentPost","value","comment","comments","deletePost","signin","formData","router","signIn","AUTH","_error$response","_error$response$data","_error$response2","_error$response2$data","response","message","swal","title","text","icon","signup","signUp","_error$response3","_error$response3$data"],"sources":["/Users/akshitanand/Deal_Dazzle_/client/src/actions/posts.js"],"sourcesContent":["// actions/posts.js\nimport { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\n\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsByCreator = (name) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsByCreator(name);\n\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySeller = (sellerId) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySeller(sellerId);\n\n    dispatch({ type: FETCH_ALL, payload: { data } }); // You may want to create a separate action type for fetching posts by seller\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n\n    history.push(`/posts/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id);\n\n    dispatch({ type: COMMENT, payload: data });\n\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signin = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signIn(formData);\n\n    dispatch({ type: AUTH, data });\n    router.push('/');\n  } catch (error) {\n    console.log(error?.response?.data?.message)\n    swal({\n      title: \"Error\",\n      text: error?.response?.data?.message,\n      icon: \"error\",\n    });\n  }\n};\n\nexport const signup = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signUp(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n    swal({\n      title: \"Error\",\n      text: error?.response?.data?.message,\n      icon: \"error\",\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}